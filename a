local Players = game.Players
local plr = Players.LocalPlayer
local HTTPS = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/MyeTheScripterLol/MyeWare/main/rayfield'))()
local HighRanks = loadstring(game:HttpGet("https://washiez.doqe.dev/lua/hrs", true))()
local MiddleRanks = loadstring(game:HttpGet("https://washiez.doqe.dev/lua/mrs", true))()
local Window = Rayfield:CreateWindow({
    Name = "MyeWare Washiez",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Mye",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MyewareWashiez",
        FileName = "Config"
    },
    Discord = {Enabled = true, Invite = "Dd4qaVfj", RememberJoins = true},
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})
local Tab1 = Window:CreateTab("Main", 4483362458) -- Title, Image

-- scanners
local MRCount = Tab1:CreateSection("MR's Not calculated yet, Calculating...")
local HRCount = Tab1:CreateSection("HR's Not calculated yet, Calculating...")

function HRScan()
    local HRS = 0
    for i, v in game.Players:GetPlayers() do
        if table.find(HighRanks, v.UserId) then HRS = HRS + 1 end
    end
    return HRS
end

function MRScan()
    local MRS = 0
    for i, v in game.Players:GetPlayers() do
        if table.find(MiddleRanks, v.UserId) then MRS = MRS + 1 end
    end
    return MRS
end

-- end

RunService.Heartbeat:Connect(function()
    HRCount:Set("Current HR Count: " .. HRScan())
    MRCount:Set("Current MR Count: " .. MRScan())
end)

local Button = Tab1:CreateButton({
    Name = "Car fling",
    Callback = function()
        local plrcar = nil
        workspace.SpawnedCars.ChildAdded:Connect(function(v)
            if v:IsA("Model") and v.Name:match(game.Players.LocalPlayer.Name) then
                plrcar = v
            end
        end)
        for _, child in pairs(workspace.SpawnedCars:GetChildren()) do
            if child.Name:match(game.Players.LocalPlayer.Name) then
                plrcar = child
            end
        end

        local flingt = true

        local function fling()
            local hrp, vel, movel = nil, nil, 0.1
            while flingt do
                game:GetService("RunService").Heartbeat:Wait()

                while flingt and not plrcar do
                    game:GetService("RunService").Heartbeat:Wait()
                end

                if flingt and plrcar then
                    hrp = plrcar.PrimaryPart

                    if hrp then
                        local success, err = pcall(function()
                            vel = hrp.AssemblyLinearVelocity
                            hrp.AssemblyLinearVelocity = vel * 10000 +
                                                             Vector3.new(0,
                                                                         10000,
                                                                         0)
                            game:GetService("RunService").RenderStepped:Wait()

                            if hrp and hrp.Parent then
                                hrp.AssemblyLinearVelocity = vel
                            end

                            game:GetService("RunService").Stepped:Wait()

                            if hrp and hrp.Parent then
                                hrp.AssemblyLinearVelocity = vel +
                                                                 Vector3.new(0,
                                                                             movel,
                                                                             0)
                                movel = movel * -1
                            end
                        end)

                        if not success then
                            warn("Error: " .. tostring(err))
                            flingt = false
                        end
                    end
                end
            end
        end

        fling()
    end
})
local Button = Tab1:CreateButton({
    Name = "Car Noclip",
    Callback = function()
        local plrcar = nil
        workspace.SpawnedCars.ChildAdded:Connect(function(v)
            if v:IsA("Model") and v.Name:match(game.Players.LocalPlayer.Name) then
                plrcar = v
            end
        end)
        for _, child in pairs(workspace.SpawnedCars:GetChildren()) do
            if child.Name:match(game.Players.LocalPlayer.Name) then
                plrcar = child
            end
        end
        _G.UrCarPath = plrcar
        while wait(1) do
            if plrcar then
                for i, v in game.Workspace.SpawnedCars:GetChildren() do
                    if v.Name ~= _G.UrCarPath.Name then
                        for i, v2 in v:GetDescendants() do
                            if v2:IsA("BasePart") then
                                v2.CanCollide = false
                            end
                        end
                    end
                end
                for i, v in game.Workspace:GetChildren() do
                    if v:FindFirstChild("Humanoid") then
                        for i, v2 in v:GetDescendants() do
                            if v2:IsA("BasePart") then
                                v2.CanCollide = false
                            end
                        end

                    end
                end
            else
                for i, v in game.Workspace.SpawnedCars:GetDescendants() do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
                for i, v in game.Workspace:GetChildren() do
                    if v:FindFirstChild("Humanoid") then
                        for i, v2 in v:GetDescendants() do
                            if v2:IsA("BasePart") then
                                v2.CanCollide = false
                            end
                        end

                    end
                end
            end
        end
    end
})
local Button = Tab1:CreateButton({
    Name = "Player fling",
    Callback = function()
        local plrcar = nil
        plrcar = game.Players.LocalPlayer.Character

        local flingt = true

        local function fling()
            local hrp, vel, movel = nil, nil, 0.1
            while flingt do
                game:GetService("RunService").Heartbeat:Wait()

                while flingt and not plrcar do
                    game:GetService("RunService").Heartbeat:Wait()
                end

                if flingt and plrcar then
                    hrp = plrcar.PrimaryPart

                    if hrp then
                        local success, err = pcall(function()
                            vel = hrp.AssemblyLinearVelocity
                            hrp.AssemblyLinearVelocity = vel * 1000000000 +
                                                             Vector3.new(0,
                                                                         1000000000000,
                                                                         0)
                            game:GetService("RunService").RenderStepped:Wait()

                            if hrp and hrp.Parent then
                                hrp.AssemblyLinearVelocity = vel
                            end

                            game:GetService("RunService").Stepped:Wait()

                            if hrp and hrp.Parent then
                                hrp.AssemblyLinearVelocity = vel +
                                                                 Vector3.new(0,
                                                                             movel,
                                                                             0)
                                movel = movel * -1
                            end
                        end)

                        if not success then
                            warn("Error: " .. tostring(err))
                            flingt = false
                        end
                    end
                end
            end
        end

        fling()
    end
})

local orank = plr.GroupInfo.Rank.Value
Tab1:CreateToggle({
    Name = "Dev Rank (client sided, open doors & cs staff menu)",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            plr.GroupInfo.Rank.Value = 255
        else
            plr.GroupInfo.Rank.Value = orank
        end
    end
})

local Map = Window:CreateTab("Map", 14921830692)

local DeletedBarriers = Instance.new("Folder")
local DeleteBarriersWorkspace = Instance.new("Folder")

Map:CreateToggle({
    Name = "Delete Barriers",
    CurrentValue = false,
    Flag = "DeleteBarriers",
    Callback = function(Value)
        if Value then
            for _, v in pairs(workspace.Parts.Models:GetChildren()) do
                if v.Name == "CarBarrier" then
                    v.Parent = DeletedBarriers
                end
            end
            for _, v in pairs(workspace:GetChildren()) do
                if v.Name == "ConstructionBarrier" or v.Name == "PostBarrier" then
                    v.Parent = DeleteBarriersWorkspace
                end
            end
        else
            for _, v in pairs(DeletedBarriers:GetChildren()) do
                v.Parent = workspace.Parts.Models
            end
            for _, v in pairs(DeleteBarriersWorkspace:GetChildren()) do
                v.Parent = workspace
            end
        end
    end
})

local DeletedStopSigns = Instance.new("Folder")

Map:CreateToggle({
    Name = "Delete Stop Signs",
    CurrentValue = false,
    Flag = "DeleteStopSigns",
    Callback = function(Value)
        if Value then
            for _, v in pairs(workspace:GetChildren()) do
                if v:IsA("Model") and v.PrimaryPart and
                    v.PrimaryPart:IsA("MeshPart") and v.PrimaryPart.MeshId ==
                    "rbxassetid://8787327039" then
                    v.Parent = DeletedStopSigns
                end
            end
        else
            for _, v in pairs(DeletedStopSigns:GetChildren()) do
                v.Parent = workspace
            end
        end
    end
})

local laneGateParents = {}

Map:CreateToggle({
    Name = "Delete Lane Gates",
    CurrentValue = false,
    Flag = "DeleteLaneGates",
    Callback = function(Value)
        if Value then
            for _, laneFolder in pairs(workspace.Lanes:GetChildren()) do
                for _, v in pairs(laneFolder:GetChildren()) do
                    if v.Name == "Gate" then
                        laneGateParents[v] = v.Parent
                        v.Parent = nil
                    end
                end
            end
        else
            for gate, lane in pairs(laneGateParents) do
                gate.Parent = lane
            end
        end
    end
})

local AdsFolder = getgenv().WASHITZ_ADSFOLDER or Instance.new("Folder")
getgenv().WASHITZ_ADSFOLDER = AdsFolder

Map:CreateToggle({
    Name = "Delete Advertisements",
    CurrentValue = false,
    Flag = "DeleteAds",
    Callback = function(Value)
        if Value then
            for _, o in workspace:GetChildren() do
                if o.Name == "Advertisement" then
                    o.Parent = AdsFolder
                end
            end
        else
            for _, a in AdsFolder:GetChildren() do
                a.Parent = workspace
            end
        end
    end
})

local BannersFolder = getgenv().WASHITZ_BANNERSFOLDER or Instance.new("Folder")
getgenv().WASHITZ_BANNERSFOLDER = BannersFolder

Map:CreateToggle({
    Name = "Delete Banner Signs",
    CurrentValue = false,
    Flag = "DeleteBannerSigns",
    Callback = function(Value)
        if Value then
            for _, o in workspace:GetChildren() do
                if o.Name:sub(1, 10) == "BannerSign" then
                    o.Parent = BannersFolder
                end
            end
        else
            for _, a in BannersFolder:GetChildren() do
                a.Parent = workspace
            end
        end
    end
})

local PlantsFolder = getgenv().WASHITZ_PLANTSFOLDER or Instance.new("Folder")
getgenv().WASHITZ_PLANTSFOLDER = PlantsFolder

Map:CreateToggle({
    Name = "Delete Plants",
    CurrentValue = false,
    Flag = "DeletePlants",
    Callback = function(Value)
        if Value then
            for _, o in workspace:GetChildren() do
                if o.Name:sub(1, 5) == "Plant" then
                    o.Parent = PlantsFolder
                end
            end
        else
            for _, a in PlantsFolder:GetChildren() do
                a.Parent = workspace
            end
        end
    end
})
local Positions = {
    {Name = "Car Wash"},
    {Name = "Washiez Middle", Position = Vector3.new(352, 4, 88)},
    {Name = "Washiez Exit", Position = Vector3.new(351, 4, 278)},
    {Name = "VIP Area", Position = Vector3.new(271, 4, 53)},
    {Name = "Car Spawns"},
    {Name = "Spawn 1", Position = Vector3.new(-106, 4, 105)},
    {Name = "Spawn 2", Position = Vector3.new(229, 4, -135)},
    {Name = "Spawn 3", Position = Vector3.new(422, 4, 370)},
    {Name = "City Locations"},
    {Name = "Washiez HQ", Position = Vector3.new(-85, 4, -211)},
    {Name = "Prison (outside)", Position = Vector3.new(230, 4, -532)},
    {Name = "Prison (inside)", Position = Vector3.new(275, 4, -566)},
    {Name = "Gas station", Position = Vector3.new(495, 3, -217)},
    {Name = "Warehouse", Position = Vector3.new(495, 4, 15)},
    {Name = "Washiez Cafe", Position = Vector3.new(545, 4, 207)},
    {Name = "Raceway", Position = Vector3.new(301, 4, 381)}
}

local Teleports = Window:CreateTab("Teleports", 14921832158)
for i = 1, #Positions do
    local name = Positions[i].Name
    local pos = Positions[i].Position
    if not pos then
        Teleports:CreateSection(name, false)
    else
        Teleports:CreateButton({
            Name = name,
            Callback = function()
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos,
                                                                   plr.Character
                                                                       .HumanoidRootPart
                                                                       .CFrame
                                                                       .LookVector)
            end
        })
    end
end
local Misc = Window:CreateTab("Misc", 14917149267)
local function exe(content)
    return function() coroutine.wrap(loadstring(content))() end
end

local Section = Misc:CreateSection("Scripts", false)

Misc:CreateButton({
    Name = "Infinite Yield",
    Callback = exe(
        [[loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()]])
})
local positions = {
    Vector3.new(343, 6, -142),
    Vector3.new(1792, -9, -5063),
    Vector3.new(1794, -9, -5255),
    Vector3.new(1666, -9, -5327),
    Vector3.new(1622, -9, -5184),
    Vector3.new(1480, 32, -5191),
    Vector3.new(1346, -5, -5504),
    Vector3.new(1341, -5, -5165),
    Vector3.new(1229, -12, -5431),
    Vector3.new(1229, -12, -5758),
    Vector3.new(1162, -11, -5835),
    Vector3.new(1155, -12, -5694),
    Vector3.new(1155, -14, -5537),
    Vector3.new(1174, -14, -5246),
    Vector3.new(1169, -14, -5071),
    Vector3.new(1325, -11, -5071),
    Vector3.new(1513, -12, -5076)
}

local teleporting = false

Misc:CreateToggle({
    Name = "Teleport to Positions",
    CurrentValue = false,
    Flag = "TeleportPositions",
    Callback = function(Value)
        teleporting = Value
        if teleporting then
            spawn(function()
                while teleporting do
                    for i, position in ipairs(positions) do
                        if not teleporting then
                            break
                        end
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position)
                        if i == 1 then
                            wait(1)
                        else
                            wait(0.1)
                        end
                    end
                    wait(1)
                end
            end)
        end
    end
})
Misc:CreateButton({
    Name = "Fling",
    Callback = exe(
        [[loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt'),true))()]])
})

Misc:CreateButton({
    Name = "Redact-Me 3000",
    Callback = exe([[
        getfenv().RedactMeName = ".gg/robloxtrollers" -- edit this if you want, once it is executed, it'll stay the name you put it.
        loadstring(game:HttpGet("https://raw.githubusercontent.com/lyracreates/scripts/main/redactme/redactme.luau", true))()
    ]])
})

local Credits = Window:CreateTab("Credits", 14923505822)
Credits:CreateLabel("Mye - Everything")
Credits:CreateLabel("Lyra - Map & Misc Tab (Was too lazy to do it myself)")
Credits:CreateLabel("Server - Teleports")
Credits:CreateLabel("discord.gg/robloxtrollers")
